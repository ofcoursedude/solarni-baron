@inject IJSRuntime JSRuntime

<canvas id="@Id"></canvas>

@code {

    public enum ChartType
    {
        Pie,
        Bar,
        Line
    }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public decimal[] Data { get; set; }

    [Parameter]
    public int[] Clusters { get; set; }

    [Parameter]
    public int HighlightIndex { get; set; }

    [Parameter]
    public string[] Labels { get; set; }

    private decimal CheckSum { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var newChecksum = Data.Sum() + HighlightIndex + Clusters.Sum() + Labels.Sum(_ => _.Length) + Data[0];
        
        if (firstRender || newChecksum != CheckSum)
        {
            var radiuses = Enumerable.Range(0, Data.Length).Select(_ => 4).ToArray();
            radiuses[HighlightIndex] = 8;

            var colors = new string[Data.Length];
            for (var i = 0; i < Data.Length; i++)
            {
                colors[i] = Clusters[i] switch
                {
                    0 => "red",
                    1 => "orange",
                    2 => "yellow",
                    3 => "green",
                    _ => "black"
                    };
            }

            var config = new
            {
                Type = Type.ToString().ToLower(),
                Options = new
                {
                    Responsive = true
                },
                Data = new
                {
                    Datasets = new[]
                    {
                        new {Data = Data, Label = "VÃ½hled cen (EUR/MWh)", PointRadius = radiuses, PointBackgroundColor = colors}
                    },
                    Labels = Labels
                }
            };
            if (firstRender)
            {
                await JSRuntime.InvokeVoidAsync("setup", Id, config);
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("update", Id, config);
            }
            CheckSum = newChecksum;
        }
    }
}