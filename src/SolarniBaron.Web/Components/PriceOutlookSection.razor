@using SolarniBaron.Domain.BatteryBox.Models
@using SolarniBaron.Domain.Ote.Models
@using SolarniBaron.Web.Components.Charts
@inherits BlazorState.BlazorStateComponent

@if (State.PriceOutlook?.Length > 0)
{
    <h3>Aktuálně @CurrentHour?.BasePriceEur.ToString("N2") EUR/MWh / @CurrentHour?.WithSurchargeCzkTotal.ToString("N2") CZK/MWh, hladina @CurrentHour?.PriceScore, cluster @CurrentHour?.PriceCluster </h3>
    <div class="chart-container" style="position: relative;">
        <Chart Id="oteoutlook" Type="@Chart.ChartType.Line"
               Data="@(State.PriceOutlook.Select(x => x.BasePriceEur).ToArray())"
               HighlightIndex="@HighlightedIndex"
               Clusters="@(State.PriceOutlook.Select(_ => _.PriceCluster).ToArray())"
               Labels="@(State.PriceOutlook.Select(x => x.HourIndex.ToString()).ToArray())">
        </Chart>
    </div>
}


@code {
    private AppState State => GetState<AppState>();
    private PriceListItem? CurrentHour => State.PriceOutlook?.FirstOrDefault(_ => _.HourIndex == DateTime.Now.Hour);

    [Inject]
    private IJSRuntime JSRuntime { get; set; }

    private int HighlightedIndex => Array.IndexOf(State.PriceOutlook ?? Array.Empty<PriceListItem>(), CurrentHour);
    private int LastHour { get; set; }
}